Realice el proceso de dispersión mediante el método de hashing extensible, sabiendo
que cada registro tiene capacidad para dos claves. El número natural indica el orden de
llegada de las mismas.

Se debe mostrar el estado del archivo para cada operación. Justifique brevemente ante
colisión y desborde los pasos que realiza.

1 Buenos Aires ....1001  2 San Juan   ....0100
3 Entre Ríos   ....1110  4 Corrientes ....0010
5 San Luis     ....0101  6 Tucumán    ....0111
7 Rio Negro    ....0011  8 Jujuy      ....1111

-------------------------------------------------------------------------------------------------------------------
1 Buenos Aires    ....1001

(0)     (0)
 0:     (Buenos Aires)()    

- El número cero sobre la tabla indica que no es necesario ningún bit de la secuencia obtenida por la 
función de dispersión.
- Se agrega la clave Buenos Aires en la celda 0 sin problema.  

-------------------------------------------------------------------------------------------------------------------
2 San Juan   ....0100

(0)     (0)
 0:     (Buenos Aires)(San Juan) 

- Se agrega la clave San Juan en la celda 0, provocando colision.

-------------------------------------------------------------------------------------------------------------------
3 Entre Ríos   ....1110

(1)     (1)
 0:     (San Juan)(Entre Ríos) 

        (1)
 1:     (Buenos Aires)()

- La insercion de Entre Ríos produce desborde. Se incrementa en uno el valor asociado a la cubeta saturada.
- Se genera una nueva cubeta con el mismo valor asociado a la cubeta saturada.

- La tabla no dispone de entradas suficientes para direccionar a la nueva cubeta.
- La tabla tiene una celda única, y como se dispone ahora de dos nodos, hace falta generar más direcciones. 
- La cantidad de celdas de la tabla se duplica y el valor asociado a la tabla se incrementa en uno.
- La primera celda de la tabla direcciona a la cubeta saturada, y la nueva celda apunta a la nueva cubeta generada.
- Se redispersa.

-------------------------------------------------------------------------------------------------------------------
4 Corrientes ....0010

(2)     (2)
 00:    (San Juan)()

        (2)
 10:    (Entre Rios)(Corrientes)

        (1)
 01:    (Buenos Aires)()
 11:

- La insercion de Corrientes produce desborde. Se incrementa en uno el valor asociado a la cubeta saturada.
- Se genera una nueva cubeta con el mismo valor asociado a la cubeta saturada.

- La tabla no dispone de entradas suficientes para direccionar a la nueva cubeta.
- Al no disponer de celdas suficientes en la tabla en memoria principal, se duplica el espacio disponible, que a 
partir de este momento necesita 2 bits de la función de hash para poder direccionar un registro. 
- La celda de referencia 00 contiene la dirección de la cubeta saturada, mientras que la celda de referencia 10 
contiene la dirección de la nueva cubeta.
- Se redispersan solamente las claves de las cubetas involucradas:
San Juan   ....0100
Entre Ríos ....1110
Corrientes ....0010

-------------------------------------------------------------------------------------------------------------------
4 San Luis     ....0101

(2)     (2)
 00:    (San Juan)()

        (2)
 10:    (Entre Rios)(Corrientes)

        (1)
 01:    (Buenos Aires)(San Luis)
 11:

- Se agrega la clave San Luis en la celda 01 de la tabla.

-------------------------------------------------------------------------------------------------------------------
5 San Luis     ....0101

(2)     (2)
 00:    (San Juan)()

        (2)
 10:    (Entre Rios)(Corrientes)

        (1)
 01:    (Buenos Aires)(San Luis)
 11:

-------------------------------------------------------------------------------------------------------------------
6 Tucumán    ....0111

(2)     (2)
 00:    (San Juan)()

        (2)
 10:    (Entre Rios)(Corrientes)

        (2)
 01:    (Buenos Aires)(San Luis)

        (2)
 11:    (Tucumán)()

- Su dirección de almacenamiento corresponde a la cubeta asociada a la celda 11. Se genera desborde 
y se crea una nueva cubeta.
- El valor asociado a ambas cubetas coincide con el valor asociado a la tabla en memoria. 
Por lo tanto: 
    La tabla posee direcciones suficientes para direccionar a la nueva cubeta y la cantidad de 
    celdas NO debe ser duplicada!

-------------------------------------------------------------------------------------------------------------------
7 Rio Negro    ....0011

(2)     (2)
 00:    (San Juan)()

        (2)
 10:    (Entre Rios)(Corrientes)

        (2)
 01:    (Buenos Aires)(San Luis)

        (2)
 11:    (Tucumán)(Rio Negro)

- Se agrega la clave Rio Negro en la celda 11, provocando colision.

-------------------------------------------------------------------------------------------------------------------
8 Jujuy      ....1111

 (3)     (1)
 000:    (San Juan)()
 100:


 010:    (2)      
 110:    (Entre Rios)(Corrientes)


         (2)
 001:    (Buenos Aires)  (San Luis)
 101:
 

         (3)
 011:    (Rio Negro)
 

         (3)
 111:    (Tucumán)(Jujuy)  

- Jujuy debe ser almacenado en la cubeta asociada a la celda 11 de la tabla. La misma se encuentra completa 
lo que genera un nuevo desborde.
- Al no disponer de celdas suficientes en la tabla en memoria principal, se duplica el espacio disponible, que a 
partir de este momento necesita 3 bits de la función de hash para poder direccionar un registro.
- La celda de referencia 011 contiene la dirección de la cubeta saturada, mientras que la celda de referencia 111 
contiene la dirección de la nueva cubeta.
- Se redispersan solamente las claves de las cubetas involucradas:
Tucumán    ....0111
Rio Negro    ....0011
Jujuy      ....1111
